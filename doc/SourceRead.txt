read:
https://docs.blender.org/api/current/index.html
https://archive.blender.org/wiki/index.php/


TODO：
一键删除材质
一键中英文翻译

Learn：
bpy.data
管理所有数据，比如objects、mesh、materials，可以通过其列表访问修改

bpy.Context:
只能访问 当前激活的 area 中的数据
C.area.ui_type是和当前使用的Editor Type相关，比如是当前使用的3D视图、节点编辑器、动画轴等
C.area\ blend_data\ collection\ engine\ mode....
C.scene 可以访问到视图中数据 (跨域，不然context操作的不是3D视图 yes?? :to test)

bpy.ops
所有的操作指令，比如按钮、建模...
进入编辑模式 bpy.ops.object.editmode_toggle()
进入雕刻模式 bpy.ops.sculpt.sculptmode_toggle()
再次运行相同指令则返回物体模式

bpy.utils
blender自身的工具


bpy.types所有实现的Class类模板定义
bpy.path 系统文件系统的访问
    bpy.path.abspath("//") 当前路径的绝对路径
    bpy.path.basename() 获取文件名
    relpath() 获取相对路径
bpy.props属性管理
    对现有类结构中的属性进行扩充
    RNA属性：对bpy.types模板类的属性进行扩充，需要提前声明
        所有的bpy.types模板的子类均有该属性
    ID属性：对bpy.types模板类子类的属性进行扩充，不需要提前声明
        只有单一的子类有该属性
    bpy.props.IntProperty
    bpy.props.FloatProperty
    bpy.props.StringProperty
    bpy.props.IntVectorProperty 数组
    bpy.props.PointerProperty 结构体
    bpy.props.RemoveProperty

    example:
    RNA属性(int float string enum bool) 可以在物体-自定义属性中看到，需要先更新一下数据才会出现
    声明
        item =[('A','1','2'),
            ('B','3','4'),]
        bpy.types.Object.myEnum = bpy.props.EnumProperty(
            name = 'testEnum',
            items = item
        )
        # 数组 最大32
        bpy.types.Object.myIntVector = bpy.props.IntVectorProperty(
            name = 'testInts',
            size = 3,  # size 最大32
            subtype = 'XYZ'
        )
        
        class test(bpy.types.PropertyGroup):
            a : bpy.props.IntProperty()
            b : bpy.props.IntProperty()
        bpy.utils.register_class(test)
        # 键值对 像是结构体数组
        bpy.types.Object.myColl =  bpy.props.CollectionProperty(type=test)
        obj.myColl.add(...)
        # 结构体
        bpy.types.Object.myStruct =  bpy.props.PointerProperty(type=test)

        bpy.types.Object.myInt = bpy.props.IntProperty(
            name = 'testInt',
            max = 100,
            min = 0,
            default = 1,
        )
        bpy.types.Mesh.myFloat  = bpy.props.FloatProperty(
            name = 'testFloat',
            max = 100.0,
            min = 0.0,
            default = 1.0,
        )
        bpy.types.Scene.myString  = bpy.props.StringProperty(
            name = 'testString',
            maxlen = 10,
            default = 'test',
        )
    使用
        D.objects['Cube'].myInt
        D.meshes['Cube'].myFloat
        del bpy.types.Object.myInt 无界面删除RNA属性(有界面则转为ID属性)
        del D.objects['Cube'].myInt 删除ID属性
        link 和 重启blender 相当于对所有属性del

    ID属性(int float string) 可以在N-条目-属性 中看到
        D.objects['Cube']['myInt2'] = 5

    get/set (int float string enum bool)
        def setFunc(self,v):
            self['value'] = v
            print("set")
        def getFunc(self):
            print("get")
            return self['value']
        def myUpdate(self,context):
            obj = context.object
            obj.location[0] = self.myInt
        bpy.types.Object.myInt = bpy.props.IntProperty(
            name = 'testInt',
            default = 1,
            set = setFunc,
            get = getFunc,
        )
    update (int float string enum bool pointer)
        bpy.types.Object.myIntUpdate = bpy.props.IntProperty(
            name = 'testInt',
            default = 1,
            update = myUpdate
        )

    operator
    invoke 初始化
    execute 执行
    modal 一直运行
    poll 检测状态
    都必须返回固定值：取消'CANCELLED' 确定'FINISHED' 运行modal'RUNNING_MODAL' 'PASS_THROUGH' 'INTERFACE'




规范命名
operator : _OT_
menu : _MT_
header : _HT_
panel : _PT_